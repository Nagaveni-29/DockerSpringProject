pipeline{
    agent any
    tools{
        maven 'm1'
    }
    stages{
        stage('test'){
            steps{
                sh 'mvn clean test'
            }
        }
        stage('install'){
            steps{
                sh 'mvn clean install -D skipTests=true'
            }
        }
	stage('sonar'){
	    steps{
		withSonarQubeEnv('sonar'){
                 sh 'mvn clean install sonar:sonar'				
			}
		}
	}
	stage("jfrog"){
            steps{
                rtUpload(
                    serverId: 'jfrog',
                    spec: '''{
                        "files": [
                            {
                                "pattern": "**/**/*.*ar",
                                "target": "project/"
                            }
                        ]
                    }'''
                )
            }
        }
       stage('dockerbuild'){
	    steps{
  	            dir("backend"){
        	       sh 'docker build -t nagavenidoddamani/backend:latest .'
                	}
                   dir("frontend"){
    	              sh 'docker build -t nagavenidoddamani/frontend:latest .'
			        }
            }
    }
	 stage('dockerpush'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'pwd', usernameVariable: 'user')]){
                    sh 'docker login -u ${user} -p ${pwd}'
                    sh 'docker push nagavenidoddamani/backend:latest'
                    sh 'docker push nagavenidoddamani/frontend:latest'
                }
            } 
        }
    }
}
	

