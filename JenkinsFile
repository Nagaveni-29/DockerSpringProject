pipeline{
    agent any
    tools{
        maven 'm1'
    }
    stages{
        stage('test'){
        
            steps{
                sh 'mvn clean test'
            }
        }
        stage('install'){
            steps{
                sh 'mvn clean install -D skipTests=true'
		
            }
        }
	stage('sonar'){
		steps{
			withSonarQubeEnv('sonar'){
			sh 'mvn clean install sonar:sonar'
			}
			}
		}

	stage("jfrog"){
            steps{
                rtUpload(
                    serverId: 'jfrog',
                    spec: '''{
                        "files": [
                            {
                                "pattern": "**/**/*.*ar",
                                "target": "project/"
                            }
                        ]
                    }'''
                )
            }
        }
		stage('Docker') {
            steps {
                dir("frontend") {   
                    sh 'docker build -t frontend:latest .'   
                }
                dir("backend") { 
                    sh 'docker build -t backend:latest .' 
                }
            }
        }
        stage('run') {
            steps {
                sh 'docker run -p 8085:8080 -d backend:latest'
                sh 'docker run -p 8084:8080 -d frontend:latest'
            }
        }
    }
}
