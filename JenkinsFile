pipeline{
    agent any
    tools{
        maven 'm1'
    }
    stages{
        stage('test'){
        
            steps{
                sh 'mvn clean test'
            }
        }
        stage('install'){
            steps{
                sh 'mvn clean install -D skipTests=true'
		
            }
        }
	stage('sonar'){
		steps{
			withSonarQubeEnv('sonar'){
			sh 'mvn clean install sonar:sonar'
			}
			}
		}

	stage("jfrog"){
            steps{
                rtUpload(
                    serverId: 'jfrog',
                    spec: '''{
                        "files": [
                            {
                                "pattern": "**/**/*.*ar",
                                "target": "project/"
                            }
                        ]
                    }'''
                )
            }
        }
			stage('Clone repository') {
        git credentialsId: 'git', url: 'https://github.com/Nagaveni-29/DockerSpringProject/blob/main/backend/Dockerfile','https://github.com/Nagaveni-29/DockerSpringProject/tree/main/frontend/Dockerfile'
    }
    
    stage('Build image') {
       dockerImage = docker.build("nagavenidoddamani/frontend:latest","nagavenidoddamani/backend:latest")
    }

    
 stage('Push image') {
        withDockerRegistry([ credentialsId: "dockerhubaccount", url: "https://hub.docker.com/u/nagavenidoddamani" ]) {
        dockerImage.push()
        }
    } 
    }
}
